apiVersion: v1
kind: Service
metadata:
  name: payment-service
spec:
  type: ClusterIP
  selector:
    component: payment
  ports:
    - port: 5000
      name: http
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-deployment
spec:
  replicas: 1  # can be increased for scalability
  selector:
    matchLabels:
      component: payment
  template:
    metadata:
      labels:
        component: payment
    spec:
      containers:
        - name: payment
          image: payment:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "0.5Gi"
              cpu: "1"
            requests:
              memory: "0.5Gi"
              cpu: "1"
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for Redis Cluster..."
              until redis-cli -h payment-redis-cluster -a redis cluster info | grep -q 'cluster_state:ok'; do
                sleep 5
              done
              python kafka_consumer.py &
              hypercorn -b 0.0.0.0:5000 -w 2 --worker-class asyncio --log-level=info app:app
          ports:
            - containerPort: 5000
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
            - name: REDIS_HOST
              value: payment-redis-cluster
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              value: "redis"
